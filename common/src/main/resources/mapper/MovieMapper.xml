<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.recommendation.common.mapper.MovieMapper" >
    <resultMap id="BaseMap" type="io.recommendation.common.bean.Movie">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="address" property="address" jdbcType="VARCHAR" />
        <result column="logo" property="logo" jdbcType="VARCHAR" />
        <result column="description" property="description" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="WatchRecordMap" type="io.recommendation.common.bean.WatchRecord">
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="movie_id" property="movieId" jdbcType="BIGINT" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="sex" property="sex" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
    </resultMap>

    <select id="findAllMovie" resultMap="BaseMap">
        select * from movie ORDER BY id limit 0,15;
    </select>
    
    <select id="findMovieByType" resultMap="BaseMap">
        SELECT *FROM movie
        <if test="type != null">
            WHERE type=#{type}
        </if>
        ORDER BY id
        <if test="offset != null and length != null">
            limit #{offset},#{length}
        </if>
    </select>

    <select id="findMovieById" resultMap="BaseMap">
        select * from movie WHERE id = #{id};
    </select>

    <select id="findSimilarById" resultMap="BaseMap">
        SELECT *FROM movie
        WHERE
        type = (
        SELECT `type` FROM movie WHERE id = #{id}
        ) limit 0,10
    </select>

    <select id="analysisForTypeCount" resultType="io.recommendation.common.bean.AnasisyForType">
        SELECT m.type,COUNT(*) AS `count` FROM action_record a LEFT JOIN movie m ON m.id=a.movie_id GROUP BY m.type;
    </select>

    <select id="analysisForSexCount" resultType="io.recommendation.common.bean.AnasisyForSex">
        SELECT u.sex,COUNT(*) AS `count` FROM action_record a LEFT JOIN `user` u ON u.id=a.user_id GROUP BY u.sex;
    </select>

    <select id="selectMoviesByIds" resultMap="BaseMap">
        select * from movie WHERE id IN
        <foreach collection="movieIds" item="movieId" open="(" close=")" separator=",">
            #{movieId}
        </foreach>;
    </select>

    <select id="findWatchRecord" resultMap="WatchRecordMap">
        SELECT
	u.id AS user_id,
	m.id AS movie_id,
	u.age,
	u.sex,
	m.type
FROM
	action_record ar
LEFT JOIN movie m ON ar.movie_id = m.id
LEFT JOIN `user` u ON ar.user_id = u.id
GROUP BY
	user_id,
	movie_id;
    </select>
</mapper>